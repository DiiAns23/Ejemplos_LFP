Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC
Rule 5     instrucciones_2 -> instrucciones_2 instruccion_2
Rule 6     instrucciones_2 -> instruccion_2
Rule 7     instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
Rule 8     instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
Rule 9     instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC
Rule 10    tipo -> RSUMA
Rule 11    tipo -> RRESTA
Rule 12    tipo -> RMULTIPLICACION
Rule 13    tipo -> RDIVISION

Terminals, with rules where they appear

DECIMAL              : 8
DIV                  : 4 7 8 9
ENTERO               : 9
IGUAL                : 7
LLAA                 : 4 4 7 7 8 8 9 9
LLAC                 : 4 4 7 7 8 8 9 9
RDIVISION            : 13
RMULTIPLICACION      : 12
RNUMERO              : 8 8 9 9
ROPERACION           : 7 7
RRESTA               : 11
RSUMA                : 10
RTIPO                : 4 4
error                : 

Nonterminals, with rules where they appear

init                 : 0
instruccion          : 2 3
instruccion_2        : 5 6
instrucciones        : 1 2
instrucciones_2      : 4 5 7
tipo                 : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC

    LLAA            shift and go to state 4

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC

    $end            reduce using rule 1 (init -> instrucciones .)
    LLAA            shift and go to state 4

    instruccion                    shift and go to state 5

state 3

    (3) instrucciones -> instruccion .

    LLAA            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> LLAA . RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC

    RTIPO           shift and go to state 6


state 5

    (2) instrucciones -> instrucciones instruccion .

    LLAA            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 6

    (4) instruccion -> LLAA RTIPO . LLAC instrucciones_2 LLAA DIV RTIPO LLAC

    LLAC            shift and go to state 7


state 7

    (4) instruccion -> LLAA RTIPO LLAC . instrucciones_2 LLAA DIV RTIPO LLAC
    (5) instrucciones_2 -> . instrucciones_2 instruccion_2
    (6) instrucciones_2 -> . instruccion_2
    (7) instruccion_2 -> . LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> . LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> . LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 8

    instrucciones_2                shift and go to state 9
    instruccion_2                  shift and go to state 10

state 8

    (7) instruccion_2 -> LLAA . ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> LLAA . RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> LLAA . RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    ROPERACION      shift and go to state 11
    RNUMERO         shift and go to state 12


state 9

    (4) instruccion -> LLAA RTIPO LLAC instrucciones_2 . LLAA DIV RTIPO LLAC
    (5) instrucciones_2 -> instrucciones_2 . instruccion_2
    (7) instruccion_2 -> . LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> . LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> . LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 13

    instruccion_2                  shift and go to state 14

state 10

    (6) instrucciones_2 -> instruccion_2 .

    LLAA            reduce using rule 6 (instrucciones_2 -> instruccion_2 .)


state 11

    (7) instruccion_2 -> LLAA ROPERACION . IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC

    IGUAL           shift and go to state 15


state 12

    (8) instruccion_2 -> LLAA RNUMERO . LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> LLAA RNUMERO . LLAC ENTERO LLAA DIV RNUMERO LLAC

    LLAC            shift and go to state 16


state 13

    (4) instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA . DIV RTIPO LLAC
    (7) instruccion_2 -> LLAA . ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> LLAA . RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> LLAA . RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    DIV             shift and go to state 17
    ROPERACION      shift and go to state 11
    RNUMERO         shift and go to state 12


state 14

    (5) instrucciones_2 -> instrucciones_2 instruccion_2 .

    LLAA            reduce using rule 5 (instrucciones_2 -> instrucciones_2 instruccion_2 .)


state 15

    (7) instruccion_2 -> LLAA ROPERACION IGUAL . tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (10) tipo -> . RSUMA
    (11) tipo -> . RRESTA
    (12) tipo -> . RMULTIPLICACION
    (13) tipo -> . RDIVISION

    RSUMA           shift and go to state 19
    RRESTA          shift and go to state 20
    RMULTIPLICACION shift and go to state 21
    RDIVISION       shift and go to state 22

    tipo                           shift and go to state 18

state 16

    (8) instruccion_2 -> LLAA RNUMERO LLAC . DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> LLAA RNUMERO LLAC . ENTERO LLAA DIV RNUMERO LLAC

    DECIMAL         shift and go to state 23
    ENTERO          shift and go to state 24


state 17

    (4) instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV . RTIPO LLAC

    RTIPO           shift and go to state 25


state 18

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo . LLAC instrucciones_2 LLAA DIV ROPERACION LLAC

    LLAC            shift and go to state 26


state 19

    (10) tipo -> RSUMA .

    LLAC            reduce using rule 10 (tipo -> RSUMA .)


state 20

    (11) tipo -> RRESTA .

    LLAC            reduce using rule 11 (tipo -> RRESTA .)


state 21

    (12) tipo -> RMULTIPLICACION .

    LLAC            reduce using rule 12 (tipo -> RMULTIPLICACION .)


state 22

    (13) tipo -> RDIVISION .

    LLAC            reduce using rule 13 (tipo -> RDIVISION .)


state 23

    (8) instruccion_2 -> LLAA RNUMERO LLAC DECIMAL . LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 27


state 24

    (9) instruccion_2 -> LLAA RNUMERO LLAC ENTERO . LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 28


state 25

    (4) instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO . LLAC

    LLAC            shift and go to state 29


state 26

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC . instrucciones_2 LLAA DIV ROPERACION LLAC
    (5) instrucciones_2 -> . instrucciones_2 instruccion_2
    (6) instrucciones_2 -> . instruccion_2
    (7) instruccion_2 -> . LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> . LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> . LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 8

    instrucciones_2                shift and go to state 30
    instruccion_2                  shift and go to state 10

state 27

    (8) instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA . DIV RNUMERO LLAC

    DIV             shift and go to state 31


state 28

    (9) instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA . DIV RNUMERO LLAC

    DIV             shift and go to state 32


state 29

    (4) instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC .

    LLAA            reduce using rule 4 (instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC .)
    $end            reduce using rule 4 (instruccion -> LLAA RTIPO LLAC instrucciones_2 LLAA DIV RTIPO LLAC .)


state 30

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 . LLAA DIV ROPERACION LLAC
    (5) instrucciones_2 -> instrucciones_2 . instruccion_2
    (7) instruccion_2 -> . LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> . LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> . LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    LLAA            shift and go to state 33

    instruccion_2                  shift and go to state 14

state 31

    (8) instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV . RNUMERO LLAC

    RNUMERO         shift and go to state 34


state 32

    (9) instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV . RNUMERO LLAC

    RNUMERO         shift and go to state 35


state 33

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA . DIV ROPERACION LLAC
    (7) instruccion_2 -> LLAA . ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC
    (8) instruccion_2 -> LLAA . RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC
    (9) instruccion_2 -> LLAA . RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC

    DIV             shift and go to state 36
    ROPERACION      shift and go to state 11
    RNUMERO         shift and go to state 12


state 34

    (8) instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO . LLAC

    LLAC            shift and go to state 37


state 35

    (9) instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO . LLAC

    LLAC            shift and go to state 38


state 36

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV . ROPERACION LLAC

    ROPERACION      shift and go to state 39


state 37

    (8) instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC .

    LLAA            reduce using rule 8 (instruccion_2 -> LLAA RNUMERO LLAC DECIMAL LLAA DIV RNUMERO LLAC .)


state 38

    (9) instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC .

    LLAA            reduce using rule 9 (instruccion_2 -> LLAA RNUMERO LLAC ENTERO LLAA DIV RNUMERO LLAC .)


state 39

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION . LLAC

    LLAC            shift and go to state 40


state 40

    (7) instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC .

    LLAA            reduce using rule 7 (instruccion_2 -> LLAA ROPERACION IGUAL tipo LLAC instrucciones_2 LLAA DIV ROPERACION LLAC .)

